#pragma kernel CSMain

#define VOLUME_RESOURCE_IS_RENDERTEXTURE3D 1

StructuredBuffer<uint4> UINTCOLOR_VOLUME_BUFFER;
StructuredBuffer<uint> COUNT_VOLUME_BUFFER;

#if VOLUME_RESOURCE_IS_RENDERTEXTURE3D
RWTexture3D<float4> VOLUME_RENDER_TEXTURE_3D;
#else
RWStructuredBuffer<float4> COLOR_VOLUME_BUFFER;
#endif

uint VOLUME_SIZE;

uint GetVolumeLinearIndex(uint3 index)
{
    return index.x * VOLUME_SIZE * VOLUME_SIZE + index.y * VOLUME_SIZE + index.z;
}

[numthreads(8, 8, 8)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    uint linearIndex = GetVolumeLinearIndex(id);
    uint count = COUNT_VOLUME_BUFFER[linearIndex];

#if VOLUME_RESOURCE_IS_RENDERTEXTURE3D
    VOLUME_RENDER_TEXTURE_3D[id] = (count > 0) ? float4(((float4)UINTCOLOR_VOLUME_BUFFER[linearIndex] / COUNT_VOLUME_BUFFER[linearIndex]) / 255.0) : float4(0.0, 0.0, 0.0, 0.0);
#else
    COLOR_VOLUME_BUFFER[linearIndex] = (count > 0) ? float4(((float4)UINTCOLOR_VOLUME_BUFFER[linearIndex] / COUNT_VOLUME_BUFFER[linearIndex]) / 255.0) : float4(0.0, 0.0, 0.0, 0.0);
#endif
}
